16
{"last_modification_time":1639349749,"language":2,"import_file":"c:/users/delra/documents/github/hsky/hsky15/include/main.h","args_hash":872625571772439760,"includes":[],"dependencies":["c:/users/delra/documents/github/hsky/hsky15/include/main.h","c:/users/delra/documents/github/hsky/hsky15/include/api.h","c:/users/delra/documents/github/hsky/hsky15/include/pros/adi.h","c:/users/delra/documents/github/hsky/hsky15/include/pros/distance.h","c:/users/delra/documents/github/hsky/hsky15/include/pros/ext_adi.h","c:/users/delra/documents/github/hsky/hsky15/include/pros/gps.h","c:/users/delra/documents/github/hsky/hsky15/include/pros/imu.h","c:/users/delra/documents/github/hsky/hsky15/include/pros/llemu.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lvgl.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_misc/lv_log.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_conf.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_misc/lv_task.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_misc/lv_mem.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_misc/lv_ll.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_hal/lv_hal.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_hal/lv_hal_disp.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_misc/lv_color.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_misc/lv_area.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_hal/lv_hal_indev.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_core/lv_obj.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_core/lv_style.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_misc/lv_font.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_misc/lv_symbol_def.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_fonts/lv_font_builtin.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_misc/lv_anim.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_hal/lv_hal_tick.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_core/lv_group.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_core/lv_lang.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_core/lv_vdb.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_core/lv_refr.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_themes/lv_theme.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_themes/lv_theme_templ.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_themes/lv_theme_default.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_themes/lv_theme_alien.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_themes/lv_theme_night.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_themes/lv_theme_zen.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_themes/lv_theme_mono.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_themes/lv_theme_nemo.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_themes/lv_theme_material.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_btn.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_cont.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_core/lv_indev.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_imgbtn.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_draw/lv_draw_img.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_draw/lv_draw.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_misc/lv_txt.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_draw/lv_draw_rect.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_draw/lv_draw_label.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_draw/lv_draw_triangle.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_img.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_misc/lv_fs.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_label.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_line.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_page.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_list.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_chart.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_table.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_cb.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_bar.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_slider.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_led.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_btnm.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_kb.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_ddlist.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_roller.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_ta.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_canvas.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_win.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_tabview.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_tileview.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_mbox.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_gauge.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_lmeter.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_sw.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_arc.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_preload.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_calendar.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_spinbox.h","c:/users/delra/documents/github/hsky/hsky15/include/pros/misc.h","c:/users/delra/documents/github/hsky/hsky15/include/pros/motors.h","c:/users/delra/documents/github/hsky/hsky15/include/pros/optical.h","c:/users/delra/documents/github/hsky/hsky15/include/pros/rtos.h","c:/users/delra/documents/github/hsky/hsky15/include/pros/rotation.h","c:/users/delra/documents/github/hsky/hsky15/include/pros/screen.h","c:/users/delra/documents/github/hsky/hsky15/include/pros/adi.hpp","c:/users/delra/documents/github/hsky/hsky15/include/pros/distance.hpp","c:/users/delra/documents/github/hsky/hsky15/include/pros/gps.hpp","c:/users/delra/documents/github/hsky/hsky15/include/pros/imu.hpp","c:/users/delra/documents/github/hsky/hsky15/include/pros/llemu.hpp","c:/users/delra/documents/github/hsky/hsky15/include/pros/misc.hpp","c:/users/delra/documents/github/hsky/hsky15/include/pros/motors.hpp","c:/users/delra/documents/github/hsky/hsky15/include/pros/optical.hpp","c:/users/delra/documents/github/hsky/hsky15/include/pros/rotation.hpp","c:/users/delra/documents/github/hsky/hsky15/include/pros/rtos.hpp","c:/users/delra/documents/github/hsky/hsky15/include/pros/screen.hpp","c:/users/delra/documents/github/hsky/hsky15/include/pros/vision.hpp","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_draw/lv_draw_line.h","c:/users/delra/documents/github/hsky/hsky15/include/pros/colors.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_version.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_conf_checker.h"],"skipped_by_preprocessor":["105:1-111:7"],"types":[{"id":0,"usr":15333955921748837064,"detailed_name":"pros","short_name_offset":0,"short_name_size":4,"kind":3,"hover":"","comments":"","declarations":[],"spell":"32:11-32:15|-1|1|2","extent":"32:1-553:2|-1|1|0","bases":[1],"derived":[13],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["32:11-32:15|-1|1|4"]},{"id":1,"usr":13838176792705659279,"detailed_name":"<fundamental>","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[0],"types":[],"funcs":[],"vars":[],"instances":[],"uses":[]},{"id":2,"usr":7911897088596356258,"detailed_name":"pros::vision_object_type","short_name_offset":6,"short_name_size":18,"kind":10,"hover":"","comments":"\r\nThis enumeration defines the different types of objects\r\nthat can be detected by the Vision Sensor","declarations":[],"spell":"38:14-38:32|0|2|2","extent":"38:9-42:2|0|2|0","bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":[]},{"id":3,"usr":2957909494533775004,"detailed_name":"pros::vision_object_type_e_t","short_name_offset":6,"short_name_size":22,"kind":252,"hover":"","comments":"","declarations":[],"spell":"42:3-42:25|0|2|2","extent":"38:1-42:25|0|2|0","alias_of":2,"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[15],"uses":["42:3-42:25|0|2|4","75:2-75:24|-1|1|4"]},{"id":4,"usr":5418412494072306323,"detailed_name":"pros::vision_signature","short_name_offset":6,"short_name_size":16,"kind":23,"hover":"","comments":"\r\nThis structure contains the parameters used by the Vision Sensor\r\nto detect objects.","declarations":[],"spell":"48:44-48:60|0|2|2","extent":"48:9-60:2|0|2|0","bases":[],"derived":[],"types":[],"funcs":[],"vars":[3,4,5,6,7,8,9,10,11,12,13],"instances":[],"uses":[]},{"id":5,"usr":7070007899884238877,"detailed_name":"pros::vision_signature_s_t","short_name_offset":6,"short_name_size":20,"kind":252,"hover":"","comments":"","declarations":[],"spell":"60:3-60:23|0|2|2","extent":"48:1-60:23|0|2|0","alias_of":4,"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["60:3-60:23|0|2|4","159:1-159:21|-1|1|4","417:1-417:21|-1|1|4"]},{"id":6,"usr":17,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[3,4,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22],"uses":[]},{"id":7,"usr":21,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[5],"uses":[]},{"id":8,"usr":6897733792262537382,"detailed_name":"pros::vision_color_code_t","short_name_offset":6,"short_name_size":19,"kind":252,"hover":"typedef uint16_t pros::vision_color_code_t","comments":"\r\nColor codes are just signatures with multiple IDs and a different type.","declarations":[],"spell":"65:18-65:37|0|2|2","extent":"65:1-65:37|0|2|0","alias_of":6,"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["65:18-65:37|0|2|4","188:1-188:20|-1|1|4","256:82-256:101|-1|1|4"]},{"id":9,"usr":1495655806692712038,"detailed_name":"pros::vision_object","short_name_offset":6,"short_name_size":13,"kind":23,"hover":"","comments":"\r\nThis structure contains a descriptor of an object detected\r\nby the Vision Sensor","declarations":[],"spell":"71:44-71:57|0|2|2","extent":"71:9-91:2|0|2|0","bases":[],"derived":[],"types":[],"funcs":[],"vars":[14,15,16,17,18,19,20,21,22],"instances":[],"uses":[]},{"id":10,"usr":14321710750847391103,"detailed_name":"pros::vision_object_s_t","short_name_offset":6,"short_name_size":17,"kind":252,"hover":"","comments":"","declarations":[],"spell":"91:3-91:20|0|2|2","extent":"71:1-91:20|0|2|0","alias_of":9,"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["91:3-91:20|0|2|4","210:1-210:18|-1|1|4","234:1-234:18|-1|1|4","256:1-256:18|-1|1|4"]},{"id":11,"usr":6251271830872346545,"detailed_name":"pros::vision_zero","short_name_offset":6,"short_name_size":11,"kind":10,"hover":"","comments":"","declarations":[],"spell":"93:14-93:25|0|2|2","extent":"93:9-96:2|0|2|0","bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":[]},{"id":12,"usr":9788203688400783454,"detailed_name":"pros::vision_zero_e_t","short_name_offset":6,"short_name_size":15,"kind":252,"hover":"","comments":"","declarations":[],"spell":"96:3-96:18|0|2|2","extent":"93:1-96:18|0|2|0","alias_of":11,"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["96:3-96:18|0|2|4"]},{"id":13,"usr":8345230848373571968,"detailed_name":"pros::c","short_name_offset":6,"short_name_size":1,"kind":3,"hover":"","comments":"","declarations":[],"spell":"115:11-115:12|0|2|2","extent":"115:1-552:2|0|2|0","bases":[0],"derived":[],"types":[],"funcs":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"vars":[],"instances":[],"uses":["115:11-115:12|0|2|4"]}],"funcs":[{"id":0,"usr":288081379857182267,"detailed_name":"int pros::c::vision_clear_led(int port)","short_name_offset":13,"short_name_size":16,"kind":12,"storage":1,"hover":"","comments":"\r\nClears the vision sensor LED color, reseting it back to its default behavior,\r\ndisplaying the most prominent object signature color.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nENXIO - The given value is not within the range of V5 ports (1-21).\r\nENODEV - The port cannot be configured as a vision sensor\r\n\r\n\\param port\r\n       The V5 port number from 1-21\r\n\r\n\\return 1 if the operation was successful or PROS_ERR if the operation\r\nfailed, setting errno.","declarations":[{"spell":"133:9-133:25|13|2|1","param_spellings":["133:34-133:38"]}],"declaring_type":13,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":1,"usr":5925228927521188903,"detailed_name":"pros::vision_signature_s_t pros::c::vision_signature_from_utility(const int id, const int u_min, const int u_max, const int u_mean, const int v_min, const int v_max, const int v_mean, const float range, const int type)","short_name_offset":36,"short_name_size":29,"kind":12,"storage":1,"hover":"","comments":"\r\nCreates a signature from the vision sensor utility\r\n\r\n\\param id\r\n       The signature ID\r\n\\param u_min\r\n       Minimum value on U axis\r\n\\param u_max\r\n       Maximum value on U axis\r\n\\param u_mean\r\n       Mean value on U axis\r\n\\param v_min\r\n       Minimum value on V axis\r\n\\param v_max\r\n       Maximum value on V axis\r\n\\param v_mean\r\n       Mean value on V axis\r\n\\param range\r\n       Scale factor\r\n\\param type\r\n       Signature type\r\n\r\n\\return A vision_signature_s_t that can be set using vision_set_signature","declarations":[{"spell":"159:22-159:51|13|2|1","param_spellings":["159:66-159:68","159:84-159:89","159:105-159:110","160:66-160:72","160:88-160:93","160:109-160:114","161:66-161:72","161:86-161:91","161:107-161:111"]}],"declaring_type":13,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":2,"usr":400818629117262330,"detailed_name":"pros::vision_color_code_t pros::c::vision_create_color_code(int port, const int sig_id1, const int sig_id2, const int sig_id3, const int sig_id4, const int sig_id5)","short_name_offset":35,"short_name_size":24,"kind":12,"storage":1,"hover":"","comments":"\r\nCreates a color code that represents a combination of the given signature\r\nIDs. If fewer than 5 signatures are to be a part of the color code, pass 0\r\nfor the additional function parameters.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nEINVAL - Fewer than two signatures have been provided or one of the\r\n         signatures is out of its [1-7] range (or 0 when omitted).\r\n\r\n\\param port\r\n       The V5 port number from 1-21\r\n\\param sig_id1\r\n       The first signature id [1-7] to add to the color code\r\n\\param sig_id2\r\n       The second signature id [1-7] to add to the color code\r\n\\param sig_id3\r\n       The third signature id [1-7] to add to the color code\r\n\\param sig_id4\r\n       The fourth signature id [1-7] to add to the color code\r\n\\param sig_id5\r\n       The fifth signature id [1-7] to add to the color code\r\n\r\n\\return A vision_color_code_t object containing the color code information.","declarations":[{"spell":"188:21-188:45|13|2|1","param_spellings":["188:54-188:58","188:75-188:82","188:99-188:106","189:61-189:68","189:85-189:92","189:109-189:116"]}],"declaring_type":13,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":3,"usr":1467012719248311570,"detailed_name":"pros::vision_object_s_t pros::c::vision_get_by_size(int port, const int size_id)","short_name_offset":33,"short_name_size":18,"kind":12,"storage":1,"hover":"","comments":"\r\nGets the nth largest object according to size_id.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nENXIO - The given value is not within the range of V5 ports (1-21).\r\nENODEV - The port cannot be configured as a vision sensor\r\nEDOM - size_id is greater than the number of available objects.\r\nEHOSTDOWN - Reading the vision sensor failed for an unknown reason.\r\n\r\n\\param port\r\n       The V5 port number from 1-21\r\n\\param size_id\r\n       The object to read from a list roughly ordered by object size\r\n       (0 is the largest item, 1 is the second largest, etc.)\r\n\r\n\\return The vision_object_s_t object corresponding to the given size id, or\r\nPROS_ERR if an error occurred.","declarations":[{"spell":"210:19-210:37|13|2|1","param_spellings":["210:46-210:50","210:67-210:74"]}],"declaring_type":13,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":4,"usr":2828028713159898174,"detailed_name":"pros::vision_object_s_t pros::c::vision_get_by_sig(int port, const int size_id, const int sig_id)","short_name_offset":33,"short_name_size":17,"kind":12,"storage":1,"hover":"","comments":"\r\nGets the nth largest object of the given signature according to size_id.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nENXIO - The given value is not within the range of V5 ports (1-21).\r\nENODEV - The port cannot be configured as a vision sensor\r\nEINVAL - sig_id is outside the range [1-8]\r\nEDOM - size_id is greater than the number of available objects.\r\nEAGAIN - Reading the vision sensor failed for an unknown reason.\r\n\r\n\\param port\r\n       The V5 port number from 1-21\r\n\\param size_id\r\n       The object to read from a list roughly ordered by object size\r\n       (0 is the largest item, 1 is the second largest, etc.)\r\n\\param signature\r\n       The signature ID [1-7] for which an object will be returned.\r\n\r\n\\return The vision_object_s_t object corresponding to the given signature and\r\nsize_id, or PROS_ERR if an error occurred.","declarations":[{"spell":"234:19-234:36|13|2|1","param_spellings":["234:45-234:49","234:66-234:73","234:90-234:96"]}],"declaring_type":13,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":5,"usr":3773400018734764874,"detailed_name":"pros::vision_object_s_t pros::c::vision_get_by_code(int port, const int size_id, const pros::vision_color_code_t color_code)","short_name_offset":33,"short_name_size":18,"kind":12,"storage":1,"hover":"","comments":"\r\nGets the nth largest object of the given color code according to size_id.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nENXIO - The given value is not within the range of V5 ports (1-21).\r\nENODEV - The port cannot be configured as a vision sensor\r\nEAGAIN - Reading the vision sensor failed for an unknown reason.\r\n\r\n\\param port\r\n       The V5 port number from 1-21\r\n\\param size_id\r\n       The object to read from a list roughly ordered by object size\r\n       (0 is the largest item, 1 is the second largest, etc.)\r\n\\param color_code\r\n       The vision_color_code_t for which an object will be returned\r\n\r\n\\return The vision_object_s_t object corresponding to the given color code\r\nand size_id, or PROS_ERR if an error occurred.","declarations":[{"spell":"256:19-256:37|13|2|1","param_spellings":["256:46-256:50","256:67-256:74","256:102-256:112"]}],"declaring_type":13,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":6,"usr":12344325474950615255,"detailed_name":"int pros::c::vision_get_exposure(int port)","short_name_offset":13,"short_name_size":19,"kind":12,"storage":1,"hover":"","comments":"\r\nGets the exposure parameter of the Vision Sensor. See\r\nhttps://pros.cs.purdue.edu/v5/tutorials/topical/vision.html#exposure-setting\r\nfor more detials.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nENXIO - The given value is not within the range of V5 ports (1-21).\r\nENODEV - The port cannot be configured as a vision sensor\r\n\r\n\\param port\r\n       The V5 port number from 1-21\r\n\r\n\\return The current exposure setting from [0,150], PROS_ERR if an error\r\noccurred","declarations":[{"spell":"274:9-274:28|13|2|1","param_spellings":["274:37-274:41"]}],"declaring_type":13,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":7,"usr":14703451916653193513,"detailed_name":"int pros::c::vision_get_object_count(int port)","short_name_offset":13,"short_name_size":23,"kind":12,"storage":1,"hover":"","comments":"\r\nGets the number of objects currently detected by the Vision Sensor.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nENXIO - The given value is not within the range of V5 ports (1-21).\r\nENODEV - The port cannot be configured as a vision sensor\r\n\r\n\\param port\r\n       The V5 port number from 1-21\r\n\r\n\\return The number of objects detected on the specified vision sensor.\r\nReturns PROS_ERR if the port was invalid or an error occurred.","declarations":[{"spell":"290:9-290:32|13|2|1","param_spellings":["290:41-290:45"]}],"declaring_type":13,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":8,"usr":10772442403338055373,"detailed_name":"int pros::c::vision_get_white_balance(int port)","short_name_offset":13,"short_name_size":24,"kind":12,"storage":1,"hover":"","comments":"\r\nGet the white balance parameter of the Vision Sensor.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nENXIO - The given value is not within the range of V5 ports (1-21).\r\nENODEV - The port cannot be configured as a vision sensor\r\n\r\n\\param port\r\n\t\t    The V5 port number from 1-21\r\n\r\n\\return The current RGB white balance setting of the sensor","declarations":[{"spell":"305:9-305:33|13|2|1","param_spellings":["305:42-305:46"]}],"declaring_type":13,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":9,"usr":12641784801428470694,"detailed_name":"int pros::c::vision_print_signature(const pros::vision_signature_s_t sig)","short_name_offset":13,"short_name_size":22,"kind":12,"storage":1,"hover":"","comments":"\r\nPrints the contents of the signature as an initializer list to the terminal.\r\n\r\n\\param sig\r\n       The signature for which the contents will be printed\r\n\r\n\\return 1 if no errors occured, PROS_ERR otherwise","declarations":[{"spell":"315:9-315:31|13|2|1","param_spellings":["315:59-315:62"]}],"declaring_type":13,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":10,"usr":11044838785744697252,"detailed_name":"int pros::c::vision_read_by_size(int port, const int size_id, const int object_count, pros::vision_object_s_t *const object_arr)","short_name_offset":13,"short_name_size":19,"kind":12,"storage":1,"hover":"","comments":"\r\nReads up to object_count object descriptors into object_arr.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nENXIO - The given value is not within the range of V5 ports (1-21), or\r\n         fewer than object_count number of objects were found.\r\nENODEV - The port cannot be configured as a vision sensor\r\nEDOM - size_id is greater than the number of available objects.\r\n\r\n\\param port\r\n       The V5 port number from 1-21\r\n\\param size_id\r\n       The object to read from a list roughly ordered by object size\r\n       (0 is the largest item, 1 is the second largest, etc.)\r\n\\param object_count\r\n       The number of objects to read\r\n\\param[out] object_arr\r\n            A pointer to copy the objects into\r\n\r\n\\return The number of object signatures copied. This number will be less than\r\nobject_count if there are fewer objects detected by the vision sensor.\r\nReturns PROS_ERR if the port was invalid, an error occurred, or fewer objects\r\nthan size_id were found. All objects in object_arr that were not found are\r\ngiven VISION_OBJECT_ERR_SIG as their signature.","declarations":[{"spell":"343:9-343:28|13|2|1","param_spellings":["343:37-343:41","343:58-343:65","343:82-343:94","344:54-344:64"]}],"declaring_type":13,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":11,"usr":1049416905629644965,"detailed_name":"int pros::c::vision_read_by_sig(int port, const int size_id, const int sig_id, const int object_count, pros::vision_object_s_t *const object_arr)","short_name_offset":13,"short_name_size":18,"kind":12,"storage":1,"hover":"","comments":"\r\nReads up to object_count object descriptors into object_arr.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nENXIO - The given value is not within the range of V5 ports (1-21), or\r\n         fewer than object_count number of objects were found.\r\nENODEV - The port cannot be configured as a vision sensor\r\nEDOM - size_id is greater than the number of available objects.\r\n\r\n\\param port\r\n       The V5 port number from 1-21\r\n\\param object_count\r\n       The number of objects to read\r\n\\param size_id\r\n       The object to read from a list roughly ordered by object size\r\n       (0 is the largest item, 1 is the second largest, etc.)\r\n\\param signature\r\n       The signature ID [1-7] for which objects will be returned.\r\n\\param[out] object_arr\r\n            A pointer to copy the objects into\r\n\r\n\\return The number of object signatures copied. This number will be less than\r\nobject_count if there are fewer objects detected by the vision sensor.\r\nReturns PROS_ERR if the port was invalid, an error occurred, or fewer objects\r\nthan size_id were found. All objects in object_arr that were not found are\r\ngiven VISION_OBJECT_ERR_SIG as their signature.","declarations":[{"spell":"374:9-374:27|13|2|1","param_spellings":["374:36-374:40","374:57-374:64","374:81-374:87","374:104-374:116","375:53-375:63"]}],"declaring_type":13,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":12,"usr":12822967408261224566,"detailed_name":"int pros::c::vision_read_by_code(int port, const int size_id, const pros::vision_color_code_t color_code, const int object_count, pros::vision_object_s_t *const object_arr)","short_name_offset":13,"short_name_size":19,"kind":12,"storage":1,"hover":"","comments":"\r\nReads up to object_count object descriptors into object_arr.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nENXIO - The given value is not within the range of V5 ports (1-21), or\r\n         fewer than object_count number of objects were found.\r\nENODEV - The port cannot be configured as a vision sensor\r\n\r\n\\param port\r\n       The V5 port number from 1-21\r\n\\param object_count\r\n       The number of objects to read\r\n\\param size_id\r\n       The object to read from a list roughly ordered by object size\r\n       (0 is the largest item, 1 is the second largest, etc.)\r\n\\param color_code\r\n       The vision_color_code_t for which objects will be returned\r\n\\param[out] object_arr\r\n            A pointer to copy the objects into\r\n\r\n\\return The number of object signatures copied. This number will be less than\r\nobject_count if there are fewer objects detected by the vision sensor.\r\nReturns PROS_ERR if the port was invalid, an error occurred, or fewer objects\r\nthan size_id were found. All objects in object_arr that were not found are\r\ngiven VISION_OBJECT_ERR_SIG as their signature.","declarations":[{"spell":"404:9-404:28|13|2|1","param_spellings":["404:37-404:41","404:58-404:65","404:93-404:103","405:44-405:56","405:83-405:93"]}],"declaring_type":13,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":13,"usr":13415672264899654415,"detailed_name":"pros::vision_signature_s_t pros::c::vision_get_signature(int port, const int signature_id)","short_name_offset":36,"short_name_size":20,"kind":12,"storage":1,"hover":"","comments":"\r\nGets the object detection signature with the given id number.\r\n\r\n\\param port\r\n       The V5 port number from 1-21\r\n\\param signature_id\r\n       The signature id to read\r\n\r\n\\return A vision_signature_s_t containing information about the signature.","declarations":[{"spell":"417:22-417:42|13|2|1","param_spellings":["417:51-417:55","417:71-417:83"]}],"declaring_type":13,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":14,"usr":3895254470480120397,"detailed_name":"int pros::c::vision_set_signature(int port, const int signature_id, pros::vision_signature_s_t *const signature_ptr)","short_name_offset":13,"short_name_size":20,"kind":12,"storage":1,"hover":"","comments":"\r\nStores the supplied object detection signature onto the vision sensor.\r\n\r\nNOTE: This saves the signature in volatile memory, and the signature will be\r\nlost as soon as the sensor is powered down.\r\n\r\n\\param port\r\n       The V5 port number from 1-21\r\n\\param signature_id\r\n       The signature id to store into\r\n\\param[in] signature_ptr\r\n           A pointer to the signature to save\r\n\r\n\\return 1 if no errors occured, PROS_ERR otherwise","declarations":[{"spell":"434:9-434:29|13|2|1","param_spellings":["434:38-434:42","434:58-434:70","434:100-434:113"]}],"declaring_type":13,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":15,"usr":4715432698950834593,"detailed_name":"int pros::c::vision_set_auto_white_balance(int port, const int enable)","short_name_offset":13,"short_name_size":29,"kind":12,"storage":1,"hover":"","comments":"\r\nEnables/disables auto white-balancing on the Vision Sensor.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nENXIO - The given value is not within the range of V5 ports (1-21).\r\nENODEV - The port cannot be configured as a vision sensor\r\nEINVAL - enable was not 0 or 1\r\n\r\n\\param port\r\n\t\t    The V5 port number from 1-21\r\n\\param enabled\r\n\t\t    Pass 0 to disable, 1 to enable\r\n\r\n\\return 1 if the operation was successful or PROS_ERR if the operation\r\nfailed, setting errno.","declarations":[{"spell":"453:9-453:38|13|2|1","param_spellings":["453:47-453:51","453:67-453:73"]}],"declaring_type":13,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":16,"usr":14695124006911472953,"detailed_name":"int pros::c::vision_set_exposure(int port, const int exposure)","short_name_offset":13,"short_name_size":19,"kind":12,"storage":1,"hover":"","comments":"\r\nSets the exposure parameter of the Vision Sensor. See\r\nhttps://pros.cs.purdue.edu/v5/tutorials/topical/vision.html#exposure-setting\r\nfor more detials.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nENXIO - The given value is not within the range of V5 ports (1-21).\r\nENODEV - The port cannot be configured as a vision sensor\r\n\r\n\\param port\r\n       The V5 port number from 1-21\r\n\\param percent\r\n       The new exposure setting from [0,150]\r\n\r\n\\return 1 if the operation was successful or PROS_ERR if the operation\r\nfailed, setting errno.","declarations":[{"spell":"473:9-473:28|13|2|1","param_spellings":["473:37-473:41","473:57-473:65"]}],"declaring_type":13,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":17,"usr":4437572634151977732,"detailed_name":"int pros::c::vision_set_led(int port, const int rgb)","short_name_offset":13,"short_name_size":14,"kind":12,"storage":1,"hover":"","comments":"\r\nSets the vision sensor LED color, overriding the automatic behavior.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nENXIO - The given value is not within the range of V5 ports (1-21).\r\nENODEV - The port cannot be configured as a vision sensor\r\n\r\n\\param port\r\n       The V5 port number from 1-21\r\n\\param rgb\r\n       An RGB code to set the LED to\r\n\r\n\\return 1 if the operation was successful or PROS_ERR if the operation\r\nfailed, setting errno.","declarations":[{"spell":"491:9-491:23|13|2|1","param_spellings":["491:32-491:36","491:52-491:55"]}],"declaring_type":13,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":18,"usr":2124102972094829930,"detailed_name":"int pros::c::vision_set_white_balance(int port, const int rgb)","short_name_offset":13,"short_name_size":24,"kind":12,"storage":1,"hover":"","comments":"\r\nSets the white balance parameter of the Vision Sensor.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nENXIO - The given value is not within the range of V5 ports (1-21).\r\nENODEV - The port cannot be configured as a vision sensor\r\n\r\n\\param port\r\n\t\t    The V5 port number from 1-21\r\n\\param rgb\r\n       The new RGB white balance setting of the sensor\r\n\r\n\\return 1 if the operation was successful or PROS_ERR if the operation\r\nfailed, setting errno.","declarations":[{"spell":"509:9-509:33|13|2|1","param_spellings":["509:42-509:46","509:62-509:65"]}],"declaring_type":13,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":19,"usr":11737919215352327203,"detailed_name":"int pros::c::vision_set_zero_point(int port, pros::vision_zero_e_t zero_point)","short_name_offset":13,"short_name_size":21,"kind":12,"storage":1,"hover":"","comments":"\r\nSets the (0,0) coordinate for the Field of View.\r\n\r\nThis will affect the coordinates returned for each request for a\r\nvision_object_s_t from the sensor, so it is recommended that this function\r\nonly be used to configure the sensor at the beginning of its use.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nENXIO - The given value is not within the range of V5 ports (1-21).\r\nENODEV - The port cannot be configured as a vision sensor\r\n\r\n\\param port\r\n\t\t    The V5 port number from 1-21\r\n\\param zero_point\r\n       One of vision_zero_e_t to set the (0,0) coordinate for the FOV\r\n\r\n\\return 1 if the operation was successful or PROS_ERR if the operation\r\nfailed, setting errno.","declarations":[{"spell":"531:9-531:30|13|2|1","param_spellings":["531:39-531:43","531:61-531:71"]}],"declaring_type":13,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":20,"usr":11294356580751423425,"detailed_name":"int pros::c::vision_set_wifi_mode(int port, const int enable)","short_name_offset":13,"short_name_size":20,"kind":12,"storage":1,"hover":"","comments":"\r\nSets the Wi-Fi mode of the Vision sensor\r\n\r\nThis functions uses the following values of errno when an error state is\r\nreached:\r\nENXIO - The given port is not within the range of V5 ports (1-21)\r\nEACCESS - Anothe resources is currently trying to access the port\r\n\r\n\\param port\r\n       The V5 port number from 1-21\r\n\\param enable\r\n       Disable Wi-Fi on the Vision sensor if 0, enable otherwise (e.g. 1)\r\n\r\n\\return 1 if the operation was successful or PROS_ERR if the operation\r\nfailed, setting errno.","declarations":[{"spell":"549:9-549:29|13|2|1","param_spellings":["549:38-549:42","549:58-549:64"]}],"declaring_type":13,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]}],"vars":[{"id":0,"usr":13687520848804927557,"detailed_name":"pros::vision_object_type::E_VISION_OBJECT_NORMAL","short_name_offset":26,"short_name_size":22,"hover":"pros::vision_object_type::E_VISION_OBJECT_NORMAL = 0","comments":"","declarations":[],"spell":"39:2-39:24|2|2|2","extent":"39:2-39:28|2|2|0","type":2,"uses":[],"kind":22,"storage":0},{"id":1,"usr":15864081210098124044,"detailed_name":"pros::vision_object_type::E_VISION_OBJECT_COLOR_CODE","short_name_offset":26,"short_name_size":26,"hover":"pros::vision_object_type::E_VISION_OBJECT_COLOR_CODE = 1","comments":"","declarations":[],"spell":"40:2-40:28|2|2|2","extent":"40:2-40:32|2|2|0","type":2,"uses":[],"kind":22,"storage":0},{"id":2,"usr":10018355592448447078,"detailed_name":"pros::vision_object_type::E_VISION_OBJECT_LINE","short_name_offset":26,"short_name_size":20,"hover":"pros::vision_object_type::E_VISION_OBJECT_LINE = 2","comments":"","declarations":[],"spell":"41:2-41:22|2|2|2","extent":"41:2-41:26|2|2|0","type":2,"uses":[],"kind":22,"storage":0},{"id":3,"usr":16442522522665726062,"detailed_name":"int pros::vision_signature::id","short_name_offset":28,"short_name_size":2,"hover":"","comments":"","declarations":[],"spell":"49:10-49:12|4|2|2","extent":"49:2-49:12|4|2|0","type":6,"uses":[],"kind":8,"storage":0},{"id":4,"usr":7323875103186687846,"detailed_name":"int [3] pros::vision_signature::_pad","short_name_offset":32,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"50:10-50:14|4|2|2","type":6,"uses":[],"kind":8,"storage":0},{"id":5,"usr":13082547329059808300,"detailed_name":"float pros::vision_signature::range","short_name_offset":30,"short_name_size":5,"hover":"","comments":"","declarations":[],"spell":"51:8-51:13|4|2|2","extent":"51:2-51:13|4|2|0","type":7,"uses":[],"kind":8,"storage":0},{"id":6,"usr":4091611847257376456,"detailed_name":"int pros::vision_signature::u_min","short_name_offset":28,"short_name_size":5,"hover":"","comments":"","declarations":[],"spell":"52:10-52:15|4|2|2","extent":"52:2-52:15|4|2|0","type":6,"uses":[],"kind":8,"storage":0},{"id":7,"usr":8676631905420539319,"detailed_name":"int pros::vision_signature::u_max","short_name_offset":28,"short_name_size":5,"hover":"","comments":"","declarations":[],"spell":"53:10-53:15|4|2|2","extent":"53:2-53:15|4|2|0","type":6,"uses":[],"kind":8,"storage":0},{"id":8,"usr":14195557404139167345,"detailed_name":"int pros::vision_signature::u_mean","short_name_offset":28,"short_name_size":6,"hover":"","comments":"","declarations":[],"spell":"54:10-54:16|4|2|2","extent":"54:2-54:16|4|2|0","type":6,"uses":[],"kind":8,"storage":0},{"id":9,"usr":4225491844916965455,"detailed_name":"int pros::vision_signature::v_min","short_name_offset":28,"short_name_size":5,"hover":"","comments":"","declarations":[],"spell":"55:10-55:15|4|2|2","extent":"55:2-55:15|4|2|0","type":6,"uses":[],"kind":8,"storage":0},{"id":10,"usr":12493225634825457461,"detailed_name":"int pros::vision_signature::v_max","short_name_offset":28,"short_name_size":5,"hover":"","comments":"","declarations":[],"spell":"56:10-56:15|4|2|2","extent":"56:2-56:15|4|2|0","type":6,"uses":[],"kind":8,"storage":0},{"id":11,"usr":12801313157205643080,"detailed_name":"int pros::vision_signature::v_mean","short_name_offset":28,"short_name_size":6,"hover":"","comments":"","declarations":[],"spell":"57:10-57:16|4|2|2","extent":"57:2-57:16|4|2|0","type":6,"uses":[],"kind":8,"storage":0},{"id":12,"usr":828799644051802282,"detailed_name":"int pros::vision_signature::rgb","short_name_offset":28,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"58:11-58:14|4|2|2","extent":"58:2-58:14|4|2|0","type":6,"uses":[],"kind":8,"storage":0},{"id":13,"usr":15699622189297208346,"detailed_name":"int pros::vision_signature::type","short_name_offset":28,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"59:11-59:15|4|2|2","extent":"59:2-59:15|4|2|0","type":6,"uses":[],"kind":8,"storage":0},{"id":14,"usr":14487062302350925945,"detailed_name":"int pros::vision_object::signature","short_name_offset":25,"short_name_size":9,"hover":"","comments":"Object signature","declarations":[],"spell":"73:11-73:20|9|2|2","extent":"73:2-73:20|9|2|0","type":6,"uses":[],"kind":8,"storage":0},{"id":15,"usr":6815082166579072238,"detailed_name":"pros::vision_object_type_e_t pros::vision_object::type","short_name_offset":50,"short_name_size":4,"hover":"","comments":"Object type, e.g. normal, color code, or line detection","declarations":[],"spell":"75:25-75:29|9|2|2","extent":"75:2-75:29|9|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":16,"usr":6692955372375315500,"detailed_name":"int pros::vision_object::left_coord","short_name_offset":25,"short_name_size":10,"hover":"","comments":"left boundary coordinate of the object","declarations":[],"spell":"77:10-77:20|9|2|2","extent":"77:2-77:20|9|2|0","type":6,"uses":[],"kind":8,"storage":0},{"id":17,"usr":9075178278868724000,"detailed_name":"int pros::vision_object::top_coord","short_name_offset":25,"short_name_size":9,"hover":"","comments":"top boundary coordinate of the object","declarations":[],"spell":"79:10-79:19|9|2|2","extent":"79:2-79:19|9|2|0","type":6,"uses":[],"kind":8,"storage":0},{"id":18,"usr":10640476530926007472,"detailed_name":"int pros::vision_object::width","short_name_offset":25,"short_name_size":5,"hover":"","comments":"width of the object","declarations":[],"spell":"81:10-81:15|9|2|2","extent":"81:2-81:15|9|2|0","type":6,"uses":[],"kind":8,"storage":0},{"id":19,"usr":3640639237875400871,"detailed_name":"int pros::vision_object::height","short_name_offset":25,"short_name_size":6,"hover":"","comments":"height of the object","declarations":[],"spell":"83:10-83:16|9|2|2","extent":"83:2-83:16|9|2|0","type":6,"uses":[],"kind":8,"storage":0},{"id":20,"usr":14676093984755204343,"detailed_name":"int pros::vision_object::angle","short_name_offset":25,"short_name_size":5,"hover":"","comments":"Angle of a color code object in 0.1 degree units (e.g. 10 -> 1 degree, 155\r\n-> 15.5 degrees)","declarations":[],"spell":"86:11-86:16|9|2|2","extent":"86:2-86:16|9|2|0","type":6,"uses":[],"kind":8,"storage":0},{"id":21,"usr":16895574728457986010,"detailed_name":"int pros::vision_object::x_middle_coord","short_name_offset":25,"short_name_size":14,"hover":"","comments":"coordinates of the middle of the object (computed from the values above)","declarations":[],"spell":"89:10-89:24|9|2|2","extent":"89:2-89:24|9|2|0","type":6,"uses":[],"kind":8,"storage":0},{"id":22,"usr":11357209642733663922,"detailed_name":"int pros::vision_object::y_middle_coord","short_name_offset":25,"short_name_size":14,"hover":"","comments":"","declarations":[],"spell":"90:10-90:24|9|2|2","extent":"90:2-90:24|9|2|0","type":6,"uses":[],"kind":8,"storage":0},{"id":23,"usr":10207291336165649106,"detailed_name":"pros::vision_zero::E_VISION_ZERO_TOPLEFT","short_name_offset":19,"short_name_size":21,"hover":"pros::vision_zero::E_VISION_ZERO_TOPLEFT = 0","comments":"(0,0) coordinate is the top left of the FOV","declarations":[],"spell":"94:2-94:23|11|2|2","extent":"94:2-94:27|11|2|0","type":11,"uses":[],"kind":22,"storage":0},{"id":24,"usr":5382102172966866351,"detailed_name":"pros::vision_zero::E_VISION_ZERO_CENTER","short_name_offset":19,"short_name_size":20,"hover":"pros::vision_zero::E_VISION_ZERO_CENTER = 1","comments":"(0,0) coordinate is the center of the FOV","declarations":[],"spell":"95:2-95:22|11|2|2","extent":"95:2-95:26|11|2|0","type":11,"uses":[],"kind":22,"storage":0},{"id":25,"usr":3279514703562095646,"detailed_name":"_PROS_VISION_H_","short_name_offset":0,"short_name_size":15,"hover":"#define _PROS_VISION_H_","comments":"","declarations":[],"spell":"21:9-21:24|-1|1|2","extent":"21:9-21:24|-1|1|0","uses":[],"kind":255,"storage":0},{"id":26,"usr":2936264533973490805,"detailed_name":"VISION_OBJECT_ERR_SIG","short_name_offset":0,"short_name_size":21,"hover":"#define VISION_OBJECT_ERR_SIG 255","comments":"","declarations":[],"spell":"23:9-23:30|-1|1|2","extent":"23:9-23:34|-1|1|0","uses":[],"kind":255,"storage":0},{"id":27,"usr":1049030951041547634,"detailed_name":"VISION_FOV_WIDTH","short_name_offset":0,"short_name_size":16,"hover":"#define VISION_FOV_WIDTH 316","comments":"","declarations":[],"spell":"25:9-25:25|-1|1|2","extent":"25:9-25:29|-1|1|0","uses":[],"kind":255,"storage":0},{"id":28,"usr":7130104912213069561,"detailed_name":"VISION_FOV_HEIGHT","short_name_offset":0,"short_name_size":17,"hover":"#define VISION_FOV_HEIGHT 212","comments":"","declarations":[],"spell":"26:9-26:26|-1|1|2","extent":"26:9-26:30|-1|1|0","uses":[],"kind":255,"storage":0},{"id":29,"usr":6899744554554580474,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["30:8-30:19|-1|1|4","99:8-99:19|-1|1|4","114:8-114:19|-1|1|4","551:8-551:19|-1|1|4"],"kind":0,"storage":0},{"id":30,"usr":16384408955994944741,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["98:8-98:29|-1|1|4"],"kind":0,"storage":0},{"id":31,"usr":3907753460047193954,"detailed_name":"VISION_OBJECT_NORMAL","short_name_offset":0,"short_name_size":20,"hover":"#define VISION_OBJECT_NORMAL pros::E_VISION_OBJECT_NORMAL","comments":"","declarations":[],"spell":"100:9-100:29|-1|1|2","extent":"100:9-100:58|-1|1|0","uses":[],"kind":255,"storage":0},{"id":32,"usr":8141018518894075164,"detailed_name":"VISION_OBJECT_COLOR_CODE","short_name_offset":0,"short_name_size":24,"hover":"#define VISION_OBJECT_COLOR_CODE pros::E_VISION_OBJECT_COLOR_CODE","comments":"","declarations":[],"spell":"101:9-101:33|-1|1|2","extent":"101:9-101:66|-1|1|0","uses":[],"kind":255,"storage":0},{"id":33,"usr":46781030670405184,"detailed_name":"VISION_OBJECT_LINE","short_name_offset":0,"short_name_size":18,"hover":"#define VISION_OBJECT_LINE pros::E_VISION_OBJECT_LINE","comments":"","declarations":[],"spell":"102:9-102:27|-1|1|2","extent":"102:9-102:54|-1|1|0","uses":[],"kind":255,"storage":0},{"id":34,"usr":15185201499983811375,"detailed_name":"VISION_ZERO_TOPLEFT","short_name_offset":0,"short_name_size":19,"hover":"#define VISION_ZERO_TOPLEFT pros::E_VISION_ZERO_TOPLEFT","comments":"","declarations":[],"spell":"103:9-103:28|-1|1|2","extent":"103:9-103:56|-1|1|0","uses":[],"kind":255,"storage":0},{"id":35,"usr":327254796657550158,"detailed_name":"VISION_ZERO_CENTER","short_name_offset":0,"short_name_size":18,"hover":"#define VISION_ZERO_CENTER pros::E_VISION_ZERO_CENTER","comments":"","declarations":[],"spell":"104:9-104:27|-1|1|2","extent":"104:9-104:54|-1|1|0","uses":[],"kind":255,"storage":0}]}