16
{"last_modification_time":1639349749,"language":2,"import_file":"c:/users/delra/documents/github/hsky/hsky15/include/main.h","args_hash":872625571772439760,"includes":[{"line":24,"resolved_path":"c:/users/delra/documents/github/hsky/hsky15/include/pros/adi.h"}],"dependencies":["c:/users/delra/documents/github/hsky/hsky15/include/main.h","c:/users/delra/documents/github/hsky/hsky15/include/api.h","c:/users/delra/documents/github/hsky/hsky15/include/pros/adi.h","c:/users/delra/documents/github/hsky/hsky15/include/pros/distance.h","c:/users/delra/documents/github/hsky/hsky15/include/pros/ext_adi.h","c:/users/delra/documents/github/hsky/hsky15/include/pros/gps.h","c:/users/delra/documents/github/hsky/hsky15/include/pros/imu.h","c:/users/delra/documents/github/hsky/hsky15/include/pros/llemu.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lvgl.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_misc/lv_log.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_conf.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_misc/lv_task.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_misc/lv_mem.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_misc/lv_ll.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_hal/lv_hal.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_hal/lv_hal_disp.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_misc/lv_color.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_misc/lv_area.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_hal/lv_hal_indev.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_core/lv_obj.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_core/lv_style.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_misc/lv_font.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_misc/lv_symbol_def.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_fonts/lv_font_builtin.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_misc/lv_anim.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_hal/lv_hal_tick.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_core/lv_group.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_core/lv_lang.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_core/lv_vdb.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_core/lv_refr.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_themes/lv_theme.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_themes/lv_theme_templ.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_themes/lv_theme_default.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_themes/lv_theme_alien.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_themes/lv_theme_night.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_themes/lv_theme_zen.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_themes/lv_theme_mono.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_themes/lv_theme_nemo.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_themes/lv_theme_material.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_btn.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_cont.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_core/lv_indev.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_imgbtn.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_draw/lv_draw_img.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_draw/lv_draw.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_misc/lv_txt.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_draw/lv_draw_rect.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_draw/lv_draw_label.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_draw/lv_draw_triangle.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_img.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_misc/lv_fs.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_label.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_line.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_page.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_list.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_chart.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_table.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_cb.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_bar.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_slider.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_led.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_btnm.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_kb.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_ddlist.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_roller.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_ta.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_canvas.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_win.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_tabview.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_tileview.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_mbox.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_gauge.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_lmeter.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_sw.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_arc.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_preload.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_calendar.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_objx/lv_spinbox.h","c:/users/delra/documents/github/hsky/hsky15/include/pros/misc.h","c:/users/delra/documents/github/hsky/hsky15/include/pros/motors.h","c:/users/delra/documents/github/hsky/hsky15/include/pros/optical.h","c:/users/delra/documents/github/hsky/hsky15/include/pros/rtos.h","c:/users/delra/documents/github/hsky/hsky15/include/pros/rotation.h","c:/users/delra/documents/github/hsky/hsky15/include/pros/screen.h","c:/users/delra/documents/github/hsky/hsky15/include/pros/vision.h","c:/users/delra/documents/github/hsky/hsky15/include/pros/distance.hpp","c:/users/delra/documents/github/hsky/hsky15/include/pros/gps.hpp","c:/users/delra/documents/github/hsky/hsky15/include/pros/imu.hpp","c:/users/delra/documents/github/hsky/hsky15/include/pros/llemu.hpp","c:/users/delra/documents/github/hsky/hsky15/include/pros/misc.hpp","c:/users/delra/documents/github/hsky/hsky15/include/pros/motors.hpp","c:/users/delra/documents/github/hsky/hsky15/include/pros/optical.hpp","c:/users/delra/documents/github/hsky/hsky15/include/pros/rotation.hpp","c:/users/delra/documents/github/hsky/hsky15/include/pros/rtos.hpp","c:/users/delra/documents/github/hsky/hsky15/include/pros/screen.hpp","c:/users/delra/documents/github/hsky/hsky15/include/pros/vision.hpp","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_draw/lv_draw_line.h","c:/users/delra/documents/github/hsky/hsky15/include/pros/colors.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_version.h","c:/users/delra/documents/github/hsky/hsky15/include/display/lv_conf_checker.h"],"skipped_by_preprocessor":[],"types":[{"id":0,"usr":15333955921748837064,"detailed_name":"pros","short_name_offset":0,"short_name_size":4,"kind":3,"hover":"","comments":"","declarations":[],"spell":"27:11-27:15|-1|1|2","extent":"27:1-661:2|-1|1|0","bases":[1],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["27:11-27:15|-1|1|4"]},{"id":1,"usr":13838176792705659279,"detailed_name":"<fundamental>","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[0],"types":[],"funcs":[],"vars":[],"instances":[],"uses":[]},{"id":2,"usr":18023238184802892766,"detailed_name":"pros::ADIPort","short_name_offset":6,"short_name_size":7,"kind":5,"hover":"","comments":"","declarations":["50:11-50:18|-1|1|4","66:2-66:9|-1|1|4","112:29-112:36|-1|1|4","224:8-224:15|-1|1|4","232:30-232:37|-1|1|4","278:8-278:15|-1|1|4","281:31-281:38|-1|1|4","329:8-329:15|-1|1|4","332:30-332:37|-1|1|4","390:8-390:15|-1|1|4","395:26-395:33|-1|1|4","450:8-450:15|-1|1|4","461:8-461:15|-1|1|4","464:28-464:35|-1|1|4","530:31-530:38|-1|1|4","582:25-582:32|-1|1|4"],"spell":"35:7-35:14|0|2|2","extent":"35:1-110:2|0|2|0","bases":[],"derived":[5,10,11,12,14,15,16,17],"types":[],"funcs":[0,1,2,3,4],"vars":[1,2],"instances":[],"uses":["50:11-50:18|2|2|4","66:2-66:9|2|2|4","112:29-112:36|-1|1|4","232:30-232:37|-1|1|4","281:31-281:38|-1|1|4","332:30-332:37|-1|1|4","395:26-395:33|-1|1|4","464:28-464:35|-1|1|4","530:31-530:38|-1|1|4","582:25-582:32|-1|1|4"]},{"id":3,"usr":11487220921788141589,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["50:42-50:61|-1|1|4","66:41-66:60|-1|1|4"]},{"id":4,"usr":17,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[1,2],"uses":[]},{"id":5,"usr":14609193790809841713,"detailed_name":"pros::ADIAnalogIn","short_name_offset":6,"short_name_size":11,"kind":5,"hover":"","comments":"","declarations":["128:11-128:22|-1|1|4","145:2-145:13|-1|1|4"],"spell":"112:7-112:18|0|2|2","extent":"112:1-225:2|0|2|0","bases":[2],"derived":[],"types":[],"funcs":[5,6,7,8],"vars":[],"instances":[],"uses":["128:11-128:22|5|2|4","145:2-145:13|5|2|4","227:26-227:37|-1|1|4","228:23-228:34|-1|1|4","229:24-229:35|-1|1|4","230:26-230:37|-1|1|4"]},{"id":6,"usr":4352277095025353617,"detailed_name":"pros::ADIPotentiometer","short_name_offset":6,"short_name_size":16,"kind":252,"hover":"using pros::ADIPotentiometer = ADIAnalogIn","comments":"","declarations":[],"spell":"227:7-227:23|0|2|2","extent":"227:1-227:37|0|2|0","alias_of":5,"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["227:7-227:23|0|2|4"]},{"id":7,"usr":8800150007144413358,"detailed_name":"pros::ADILineSensor","short_name_offset":6,"short_name_size":13,"kind":252,"hover":"using pros::ADILineSensor = ADIAnalogIn","comments":"","declarations":[],"spell":"228:7-228:20|0|2|2","extent":"228:1-228:34|0|2|0","alias_of":5,"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["228:7-228:20|0|2|4"]},{"id":8,"usr":3510581490805091820,"detailed_name":"pros::ADILightSensor","short_name_offset":6,"short_name_size":14,"kind":252,"hover":"using pros::ADILightSensor = ADIAnalogIn","comments":"","declarations":[],"spell":"229:7-229:21|0|2|2","extent":"229:1-229:35|0|2|0","alias_of":5,"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["229:7-229:21|0|2|4"]},{"id":9,"usr":7976816518077257800,"detailed_name":"pros::ADIAccelerometer","short_name_offset":6,"short_name_size":16,"kind":252,"hover":"using pros::ADIAccelerometer = ADIAnalogIn","comments":"","declarations":[],"spell":"230:7-230:23|0|2|2","extent":"230:1-230:37|0|2|0","alias_of":5,"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["230:7-230:23|0|2|4"]},{"id":10,"usr":3866165162372898745,"detailed_name":"pros::ADIAnalogOut","short_name_offset":6,"short_name_size":12,"kind":5,"hover":"","comments":"","declarations":["245:11-245:23|-1|1|4","260:2-260:14|-1|1|4"],"spell":"232:7-232:19|0|2|2","extent":"232:1-279:2|0|2|0","bases":[2],"derived":[],"types":[],"funcs":[9],"vars":[],"instances":[],"uses":["245:11-245:23|10|2|4","260:2-260:14|10|2|4"]},{"id":11,"usr":6519899775716012131,"detailed_name":"pros::ADIDigitalOut","short_name_offset":6,"short_name_size":13,"kind":5,"hover":"","comments":"","declarations":["296:11-296:24|-1|1|4","312:2-312:15|-1|1|4"],"spell":"281:7-281:20|0|2|2","extent":"281:1-330:2|0|2|0","bases":[2],"derived":[],"types":[],"funcs":[10],"vars":[],"instances":[],"uses":["296:11-296:24|11|2|4","312:2-312:15|11|2|4"]},{"id":12,"usr":16927547254102048767,"detailed_name":"pros::ADIDigitalIn","short_name_offset":6,"short_name_size":12,"kind":5,"hover":"","comments":"","declarations":["345:11-345:23|-1|1|4","359:2-359:14|-1|1|4"],"spell":"332:7-332:19|0|2|2","extent":"332:1-391:2|0|2|0","bases":[2],"derived":[],"types":[],"funcs":[11,12],"vars":[],"instances":[],"uses":["345:11-345:23|12|2|4","359:2-359:14|12|2|4","393:19-393:31|-1|1|4"]},{"id":13,"usr":11842997288427208633,"detailed_name":"pros::ADIButton","short_name_offset":6,"short_name_size":9,"kind":252,"hover":"using pros::ADIButton = ADIDigitalIn","comments":"","declarations":[],"spell":"393:7-393:16|0|2|2","extent":"393:1-393:31|0|2|0","alias_of":12,"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["393:7-393:16|0|2|4"]},{"id":14,"usr":9916532316344146425,"detailed_name":"pros::ADIMotor","short_name_offset":6,"short_name_size":8,"kind":5,"hover":"","comments":"","declarations":["408:11-408:19|-1|1|4","422:2-422:10|-1|1|4"],"spell":"395:7-395:15|0|2|2","extent":"395:1-462:2|0|2|0","bases":[2],"derived":[],"types":[],"funcs":[13,14],"vars":[],"instances":[],"uses":["408:11-408:19|14|2|4","422:2-422:10|14|2|4"]},{"id":15,"usr":7088731401015988589,"detailed_name":"pros::ADIEncoder","short_name_offset":6,"short_name_size":10,"kind":5,"hover":"","comments":"","declarations":["481:2-481:12|-1|1|4","498:2-498:12|-1|1|4"],"spell":"464:7-464:17|0|2|2","extent":"464:1-528:2|0|2|0","bases":[2],"derived":[],"types":[],"funcs":[15,16,17,18],"vars":[],"instances":[],"uses":["481:2-481:12|15|2|4","498:2-498:12|15|2|4"]},{"id":16,"usr":12338317249437542137,"detailed_name":"pros::ADIUltrasonic","short_name_offset":6,"short_name_size":13,"kind":5,"hover":"","comments":"","declarations":["547:2-547:15|-1|1|4","563:2-563:15|-1|1|4"],"spell":"530:7-530:20|0|2|2","extent":"530:1-580:2|0|2|0","bases":[2],"derived":[],"types":[],"funcs":[19,20,21],"vars":[],"instances":[],"uses":["547:2-547:15|16|2|4","563:2-563:15|16|2|4"]},{"id":17,"usr":7408943641155708130,"detailed_name":"pros::ADIGyro","short_name_offset":6,"short_name_size":7,"kind":5,"hover":"","comments":"","declarations":["606:11-606:18|-1|1|4","631:2-631:9|-1|1|4"],"spell":"582:7-582:14|0|2|2","extent":"582:1-660:2|0|2|0","bases":[2],"derived":[],"types":[],"funcs":[22,23,24],"vars":[],"instances":[],"uses":["606:11-606:18|17|2|4","631:2-631:9|17|2|4"]}],"funcs":[{"id":0,"usr":8417582208386654553,"detailed_name":"void pros::ADIPort::ADIPort(int port_pair, pros::adi_port_config_e_t type)","short_name_offset":11,"short_name_size":7,"kind":9,"storage":1,"hover":"","comments":"\r\nConfigures an ADI port on an adi expander to act as a given sensor type.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nENXIO - Either the ADI port value or the smart port value is not within its\r\n\t *\t   valid range (ADI port: 1-8, 'a'-'h', or 'A'-'H'; smart port: 1-21).\r\n\r\n\\param port_pair\r\n       The pair of the smart port number (from 1-22) and the ADI port number\r\n\t\t  (from 1-8, 'a'-'h', 'A'-'H') to configure\r\n\\param type\r\n\t\t  The configuration type for the port","declarations":[{"spell":"50:11-50:18|2|2|1","param_spellings":["50:32-50:40","50:62-50:66"]},{"spell":"66:2-66:9|2|2|1","param_spellings":["66:30-66:39","66:61-66:65"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":1,"usr":16847388600274729692,"detailed_name":"int pros::ADIPort::get_config() const","short_name_offset":19,"short_name_size":10,"kind":6,"storage":1,"hover":"","comments":"\r\nGets the configuration for the given ADI port.\r\n\r\n\\return The ADI configuration for the given port","declarations":[{"spell":"73:15-73:25|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":2,"usr":932350460131790914,"detailed_name":"int pros::ADIPort::get_value() const","short_name_offset":19,"short_name_size":9,"kind":6,"storage":1,"hover":"","comments":"\r\nGets the value for the given ADI port.\r\n\r\n\\return The value stored for the given port","declarations":[{"spell":"80:15-80:24|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":["0:0-0:0|5|2|32"],"callees":[]},{"id":3,"usr":4891214209219002630,"detailed_name":"int pros::ADIPort::set_config(pros::adi_port_config_e_t type) const","short_name_offset":19,"short_name_size":10,"kind":6,"storage":1,"hover":"","comments":"\r\nConfigures an ADI port to act as a given sensor type.\r\n\r\n\\param type\r\n       The configuration type for the port\r\n\r\n\\return 1 if the operation was successful or PROS_ERR if the operation\r\nfailed, setting errno.","declarations":[{"spell":"91:15-91:25|2|2|1","param_spellings":["91:46-91:50"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":4,"usr":8734051080502763252,"detailed_name":"int pros::ADIPort::set_value(int value) const","short_name_offset":19,"short_name_size":9,"kind":6,"storage":1,"hover":"","comments":"\r\nSets the value for the given ADI port.\r\n\r\nThis only works on ports configured as outputs, and the behavior will\r\nchange depending on the configuration of the port.\r\n\r\n\\param value\r\n       The value to set the ADI port to\r\n\r\n\\return 1 if the operation was successful or PROS_ERR if the operation\r\nfailed, setting errno.","declarations":[{"spell":"105:15-105:24|2|2|1","param_spellings":["105:38-105:43"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":["0:0-0:0|10|2|32"],"callees":[]},{"id":5,"usr":16912843911703923199,"detailed_name":"void pros::ADIAnalogIn::ADIAnalogIn(int port_pair)","short_name_offset":11,"short_name_size":11,"kind":9,"storage":1,"hover":"","comments":"\r\nConfigures an ADI port on an adi expander to act as an Analog Input.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nENXIO - Either the ADI port value or the smart port value is not within its\r\n\t *\t   valid range (ADI port: 1-8, 'a'-'h', or 'A'-'H'; smart port: 1-21).\r\n\r\n\\param port_pair\r\n       The pair of the smart port number (from 1-22) and the\r\n\t\t  ADI port number (from 1-8, 'a'-'h', 'A'-'H') to configure\r\n\r\n\\return 1 if the operation was successful or PROS_ERR if the operation\r\nfailed, setting errno.","declarations":[{"spell":"128:11-128:22|5|2|1","param_spellings":["128:36-128:44"]},{"spell":"145:2-145:13|5|2|1","param_spellings":["145:34-145:43"]}],"declaring_type":5,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":6,"usr":2465680578346013232,"detailed_name":"int pros::ADIAnalogIn::calibrate() const","short_name_offset":23,"short_name_size":9,"kind":6,"storage":1,"hover":"","comments":"\r\nCalibrates the analog sensor on the specified port and returns the new\r\ncalibration value.\r\n\r\nThis method assumes that the true sensor value is not actively changing at\r\nthis time and computes an average from approximately 500 samples, 1 ms\r\napart, for a 0.5 s period of calibration. The average value thus calculated\r\nis returned and stored for later calls to the\r\npros::ADIAnalogIn::get_value_calibrated() and\r\npros::ADIAnalogIn::get_value_calibrated_HR() functions. These functions\r\nwill return the difference between this value and the current sensor value\r\nwhen called.\r\n\r\nDo not use this function when the sensor value might be unstable (gyro\r\nrotation, accelerometer movement).\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nENODEV - The port is not configured as an analog input\r\n\r\n\\return The average sensor value computed by this function","declarations":[{"spell":"169:15-169:24|5|2|1","param_spellings":[]}],"declaring_type":5,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":7,"usr":18142387559538614297,"detailed_name":"int pros::ADIAnalogIn::get_value_calibrated() const","short_name_offset":23,"short_name_size":20,"kind":6,"storage":1,"hover":"","comments":"\r\nGets the 12 bit calibrated value of an analog input port.\r\n\r\nThe pros::ADIAnalogIn::calibrate() function must be run first. This\r\nfunction is inappropriate for sensor values intended for integration, as\r\nround-off error can accumulate causing drift over time. Use\r\npros::ADIAnalogIn::get_value_calibrated_HR() instead.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nENODEV - The port is not configured as an analog input\r\n\r\n\\return The difference of the sensor value from its calibrated default from\r\n-4095 to 4095","declarations":[{"spell":"186:15-186:35|5|2|1","param_spellings":[]}],"declaring_type":5,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":8,"usr":8712895695494349982,"detailed_name":"int pros::ADIAnalogIn::get_value_calibrated_HR() const","short_name_offset":23,"short_name_size":23,"kind":6,"storage":1,"hover":"","comments":"\r\nGets the 16 bit calibrated value of an analog input port.\r\n\r\nThe pros::ADIAnalogIn::calibrate() function must be run first. This is\r\nintended for integrated sensor values such as gyros and accelerometers to\r\nreduce drift due to round-off, and should not be used on a sensor such as a\r\nline tracker or potentiometer.\r\n\r\nThe value returned actually has 16 bits of \"precision\", even though the ADC\r\nonly reads 12 bits, so that error induced by the average value being\r\nbetween two values when integrated over time is trivial. Think of the value\r\nas the true value times 16.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nENODEV - The port is not configured as an analog input\r\n\r\n\\return The difference of the sensor value from its calibrated default from\r\n-16384 to 16384","declarations":[{"spell":"208:15-208:38|5|2|1","param_spellings":[]}],"declaring_type":5,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":9,"usr":10694055808703412464,"detailed_name":"void pros::ADIAnalogOut::ADIAnalogOut(int port_pair)","short_name_offset":11,"short_name_size":12,"kind":9,"storage":1,"hover":"","comments":"\r\nConfigures an ADI port on an adi_expander to act as an Analog Output.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nENXIO - Either the ADI port value or the smart port value is not within its\r\n\t *\t   valid range (ADI port: 1-8, 'a'-'h', or 'A'-'H'; smart port: 1-21).\r\n\r\n\\param port_pair\r\n       The pair of the smart port number (from 1-22) and the\r\n\t\t  ADI port number (from 1-8, 'a'-'h', 'A'-'H') to configure","declarations":[{"spell":"245:11-245:23|10|2|1","param_spellings":["245:37-245:45"]},{"spell":"260:2-260:14|10|2|1","param_spellings":["260:35-260:44"]}],"declaring_type":10,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":10,"usr":1221855590187134814,"detailed_name":"void pros::ADIDigitalOut::ADIDigitalOut(int port_pair, bool init_state)","short_name_offset":11,"short_name_size":13,"kind":9,"storage":1,"hover":"","comments":"\r\nConfigures an ADI port on an adi_expander to act as a Digital Output.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nENXIO - Either the ADI port value or the smart port value is not within its\r\n\t *\t   valid range (ADI port: 1-8, 'a'-'h', or 'A'-'H'; smart port: 1-21).\r\n\r\n\\param port_pair\r\n       The pair of the smart port number (from 1-22) and the\r\n\t\t  ADI port number (from 1-8, 'a'-'h', 'A'-'H') to configure\r\n\\param init_state\r\n       The initial state for the port","declarations":[{"spell":"296:11-296:24|11|2|1","param_spellings":["296:38-296:46","296:53-296:63"]},{"spell":"312:2-312:15|11|2|1","param_spellings":["312:36-312:45","312:52-312:62"]}],"declaring_type":11,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":11,"usr":549161733353513763,"detailed_name":"void pros::ADIDigitalIn::ADIDigitalIn(int port_pair)","short_name_offset":11,"short_name_size":12,"kind":9,"storage":1,"hover":"","comments":"\r\nConfigures an ADI port on an adi_expander to act as a Digital Input.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nENXIO - Either the ADI port value or the smart port value is not within its\r\n\t *\t   valid range (ADI port: 1-8, 'a'-'h', or 'A'-'H'; smart port: 1-21).\r\n\r\n\\param port_pair\r\n       The pair of the smart port number (from 1-22) and the\r\n \t  ADI port number (from 1-8, 'a'-'h', 'A'-'H') to configure","declarations":[{"spell":"345:11-345:23|12|2|1","param_spellings":["345:37-345:45"]},{"spell":"359:2-359:14|12|2|1","param_spellings":["359:35-359:44"]}],"declaring_type":12,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":12,"usr":6922073231004579968,"detailed_name":"int pros::ADIDigitalIn::get_new_press() const","short_name_offset":24,"short_name_size":13,"kind":6,"storage":1,"hover":"","comments":"\r\nGets a rising-edge case for a digital button press.\r\n\r\nThis function is not thread-safe.\r\nMultiple tasks polling a single button may return different results under\r\nthe same circumstances, so only one task should call this function for any\r\ngiven button. E.g., Task A calls this function for buttons 1 and 2. Task B\r\nmay call this function for button 3, but should not for buttons 1 or 2. A\r\ntypical use-case for this function is to call inside opcontrol to detect\r\nnew button presses, and not in any other tasks.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nENODEV - The port is not configured as a digital input\r\n\r\n\\return 1 if the button is pressed and had not been pressed the last time\r\nthis function was called, 0 otherwise.","declarations":[{"spell":"379:15-379:28|12|2|1","param_spellings":[]}],"declaring_type":12,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":13,"usr":13077724186607215894,"detailed_name":"void pros::ADIMotor::ADIMotor(int port_pair)","short_name_offset":11,"short_name_size":8,"kind":9,"storage":1,"hover":"","comments":"\r\nConfigures an ADI port on an adi_expander to act as a Motor.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nENXIO - Either the ADI port value or the smart port value is not within its\r\n\t *\t   valid range (ADI port: 1-8, 'a'-'h', or 'A'-'H'; smart port: 1-21).\r\n\r\n\\param port_pair\r\n       The pair of the smart port number (from 1-22) and the\r\n \t  ADI port number (from 1-8, 'a'-'h', 'A'-'H') to configure","declarations":[{"spell":"408:11-408:19|14|2|1","param_spellings":["408:33-408:41"]},{"spell":"422:2-422:10|14|2|1","param_spellings":["422:31-422:40"]}],"declaring_type":14,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":14,"usr":2629973652818429632,"detailed_name":"int pros::ADIMotor::stop() const","short_name_offset":20,"short_name_size":4,"kind":6,"storage":1,"hover":"","comments":"\r\nStops the motor on the given port.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nENODEV - The port is not configured as a motor\r\n\r\n\\return 1 if the operation was successful or PROS_ERR if the operation\r\nfailed, setting errno.","declarations":[{"spell":"434:15-434:19|14|2|1","param_spellings":[]}],"declaring_type":14,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":15,"usr":3084245087987895599,"detailed_name":"void pros::ADIEncoder::ADIEncoder(int adi_port_top, int adi_port_bottom, bool reversed)","short_name_offset":11,"short_name_size":10,"kind":9,"storage":1,"hover":"","comments":"\r\nConfigures a set of ADI ports to act as an Encoder.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nENXIO - Either the ADI port value or the smart port value is not within its\r\n\t *\t   valid range (ADI port: 1-8, 'a'-'h', or 'A'-'H'; smart port: 1-21).\r\n\r\n\\param adi_port_top\r\n       The  \"top\" wire from the encoder sensor with the removable cover side up\r\n\\param adi_port_bottom\r\n      The \"bottom\" wire from the encoder sensor\r\n\\param reverse\r\n       If \"true\", the sensor will count in the opposite direction","declarations":[{"spell":"481:2-481:12|15|2|1","param_spellings":["481:26-481:38","481:53-481:68","481:75-481:83"]}],"declaring_type":15,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":16,"usr":3652989267425880717,"detailed_name":"void pros::ADIEncoder::ADIEncoder(int port_tuple, bool reversed)","short_name_offset":11,"short_name_size":10,"kind":9,"storage":1,"hover":"","comments":"\r\nConfigures a set of ADI ports on an adi_expander to act as an Encoder.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nENXIO - Either the ADI port value or the smart port value is not within its\r\n\t *\t   valid range (ADI port: 1-8, 'a'-'h', or 'A'-'H'; smart port: 1-21).\r\n\r\n\\param port_tuple\r\n       The tuple of the smart port number, the \"top\" wire from the encoder\r\n\t\t  sensor with the removable cover side up, and the \"bottom\" wire from\r\n\t\t  the encoder sensor\r\n\\param reverse\r\n       If \"true\", the sensor will count in theopposite direction","declarations":[{"spell":"498:2-498:12|15|2|1","param_spellings":["498:34-498:44","498:51-498:59"]}],"declaring_type":15,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":17,"usr":2574650409703713348,"detailed_name":"int pros::ADIEncoder::reset() const","short_name_offset":22,"short_name_size":5,"kind":6,"storage":1,"hover":"","comments":"\r\nSets the encoder value to zero.\r\n\r\nIt is safe to use this method while an encoder is enabled. It is not\r\nnecessary to call this method before stopping or starting an encoder.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nENODEV - The port is not configured as a motor\r\n\r\n\\return 1 if the operation was successful or PROS_ERR if the operation\r\nfailed, setting errno.","declarations":[{"spell":"513:15-513:20|15|2|1","param_spellings":[]}],"declaring_type":15,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":18,"usr":3008028234255616998,"detailed_name":"int pros::ADIEncoder::get_value() const","short_name_offset":22,"short_name_size":9,"kind":6,"storage":1,"hover":"","comments":"\r\nGets the number of ticks recorded by the encoder.\r\n\r\nThere are 360 ticks in one revolution.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nENODEV - The port is not configured as a motor\r\n\r\n\\return The signed and cumulative number of counts since the last start or\r\nreset","declarations":[{"spell":"527:15-527:24|15|2|1","param_spellings":[]}],"declaring_type":15,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":19,"usr":12458904890589496501,"detailed_name":"void pros::ADIUltrasonic::ADIUltrasonic(int adi_port_ping, int adi_port_echo)","short_name_offset":11,"short_name_size":13,"kind":9,"storage":1,"hover":"","comments":"\r\nConfigures a set of ADI ports to act as an Ultrasonic sensor.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nENXIO - Either the ADI port value or the smart port value is not within its\r\n\t *\t   valid range (ADI port: 1-8, 'a'-'h', or 'A'-'H'; smart port: 1-21).\r\n\r\n\\param port_ping\r\n       The port connected to the orange OUTPUT cable. This should be in port\r\n       1, 3, 5, or 7 ('A', 'C', 'E', 'G').\r\n\\param port_echo\r\n       The port connected to the yellow INPUT cable. This should be in the\r\n       next highest port following port_ping.","declarations":[{"spell":"547:2-547:15|16|2|1","param_spellings":["547:29-547:42","547:57-547:70"]}],"declaring_type":16,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":20,"usr":925750323274756674,"detailed_name":"void pros::ADIUltrasonic::ADIUltrasonic(int port_tuple)","short_name_offset":11,"short_name_size":13,"kind":9,"storage":1,"hover":"","comments":"\r\nConfigures a set of ADI ports on an adi_expander to act as an Ultrasonic sensor.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nENXIO - Either the ADI port value or the smart port value is not within its\r\n\t *\t   valid range (ADI port: 1-8, 'a'-'h', or 'A'-'H'; smart port: 1-21).\r\n\r\n\\param port_tuple\r\n       The tuple of the smart port number, the port connected to the orange\r\n\t\t  OUTPUT cable (1, 3, 5, 7 or 'A', 'C', 'E', 'G'), and the port \r\n\t\t  connected to the yellow INPUT cable (the next) highest port \r\n\t\t  following port_ping).","declarations":[{"spell":"563:2-563:15|16|2|1","param_spellings":["563:37-563:47"]}],"declaring_type":16,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":21,"usr":9163899296840639698,"detailed_name":"int pros::ADIUltrasonic::get_value() const","short_name_offset":25,"short_name_size":9,"kind":6,"storage":1,"hover":"","comments":"\r\nGets the current ultrasonic sensor value in centimeters.\r\n\r\nIf no object was found, zero is returned. If the ultrasonic sensor was\r\nnever started, the return value is undefined. Round and fluffy objects can\r\ncause inaccurate values to be returned.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nENODEV - The port is not configured as an ultrasonic\r\n\r\n\\return The distance to the nearest object in m^-4 (10000 indicates 1\r\nmeter), measured from the sensor's mounting points.","declarations":[{"spell":"579:15-579:24|16|2|1","param_spellings":[]}],"declaring_type":16,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":22,"usr":5763005834692195292,"detailed_name":"void pros::ADIGyro::ADIGyro(int port_pair, double multiplier)","short_name_offset":11,"short_name_size":7,"kind":9,"storage":1,"hover":"","comments":"\r\nInitializes a gyroscope on the given port of an adi expander. If the given\r\nport has not previously been configured as a gyro, then this function starts\r\na 1300ms calibration period.\r\n\r\nIt is highly recommended that an ADIGyro object be created in initialize()\r\nwhen the robot is stationary to ensure proper calibration. If an ADIGyro\r\nobject is declared at the global scope, a hardcoded 1300ms delay at the\r\nbeginning of initialize will be necessary to ensure that the gyro's\r\nreturned values are correct at the beginning of autonomous/opcontrol.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nENXIO - Either the ADI port value or the smart port value is not within its\r\n\t *\t   valid range (ADI port: 1-8, 'a'-'h', or 'A'-'H'; smart port: 1-21).\r\n\r\n\\param port_pair\r\n       The pair of the smart port number (from 1-22) and the\r\n \t  ADI port number (from 1-8, 'a'-'h', 'A'-'H') to configure\r\n\\param multiplier\r\n       A scalar value that will be multiplied by the gyro heading value\r\n       supplied by the ADI","declarations":[{"spell":"606:11-606:18|17|2|1","param_spellings":["606:32-606:40","606:49-606:59"]},{"spell":"631:2-631:9|17|2|1","param_spellings":["631:30-631:39","631:48-631:58"]}],"declaring_type":17,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":23,"usr":17994133325688680133,"detailed_name":"double pros::ADIGyro::get_value() const","short_name_offset":22,"short_name_size":9,"kind":6,"storage":1,"hover":"","comments":"\r\nGets the current gyro angle in tenths of a degree. Unless a multiplier is\r\napplied to the gyro, the return value will be a whole number representing\r\nthe number of degrees of rotation times 10.\r\n\r\nThere are 360 degrees in a circle, thus the gyro will return 3600 for one\r\nwhole rotation.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nENODEV - The port is not configured as a gyro\r\n\r\n\\return The gyro angle in degrees.","declarations":[{"spell":"647:9-647:18|17|2|1","param_spellings":[]}],"declaring_type":17,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":24,"usr":7809446195044191400,"detailed_name":"int pros::ADIGyro::reset() const","short_name_offset":19,"short_name_size":5,"kind":6,"storage":1,"hover":"","comments":"\r\nResets the gyroscope value to zero.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nENODEV - The port is not configured as a gyro\r\n\r\n\\return 1 if the operation was successful or PROS_ERR if the operation\r\nfailed, setting errno.","declarations":[{"spell":"659:15-659:20|17|2|1","param_spellings":[]}],"declaring_type":17,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]}],"vars":[{"id":0,"usr":11975439005955123621,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["50:69-50:89|2|2|4","66:68-66:88|2|2|4"],"kind":0,"storage":0},{"id":1,"usr":10067725808290919489,"detailed_name":"int pros::ADIPort::_smart_port","short_name_offset":19,"short_name_size":11,"hover":"","comments":"","declarations":[],"spell":"108:15-108:26|2|2|2","extent":"108:2-108:26|2|2|0","type":4,"uses":[],"kind":8,"storage":0},{"id":2,"usr":256308844753387419,"detailed_name":"int pros::ADIPort::_adi_port","short_name_offset":19,"short_name_size":9,"hover":"","comments":"","declarations":[],"spell":"109:15-109:24|2|2|2","extent":"109:2-109:24|2|2|0","type":4,"uses":[],"kind":8,"storage":0},{"id":3,"usr":10981661429791314007,"detailed_name":"_PROS_ADI_HPP_","short_name_offset":0,"short_name_size":14,"hover":"#define _PROS_ADI_HPP_","comments":"","declarations":[],"spell":"19:9-19:23|-1|1|2","extent":"19:9-19:23|-1|1|0","uses":[],"kind":255,"storage":0},{"id":4,"usr":1493189742886320161,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["296:66-296:69|-1|1|4","312:65-312:68|-1|1|4"],"kind":0,"storage":0}]}